pipeline {
     agent {label 'lpgcen-ncbbl-uswe1-0005'}

    stages {
        stage('Hello') {
            steps {
                echo 'Hello World'
                echo "Barnach selected is $branch_test"
                sh  "nomos"
                sh "ls"
            }
        }
        stage ('k8s  us-west1-a cluster authentication') {
            steps{
                echo "authenticating with k8s cluster"

                script {
                    // Authenticating with GKE with Service account as jenkins secrate
                    withCredentials([file(credentialsId: 'csa-key', variable: 'GC_KEY')]) {
                            sh("gcloud auth activate-service-account --key-file=${GC_KEY}")
                            sh '''
                            gcloud container clusters get-credentials --internal-ip lpgkcl-n-conbld-uswe1-01 --zone us-west1-a --project lpgprj-b2b-n-cbbapp-us-01
                          export https_proxy=10.214.0.16:8118

                            echo "Ip is, $https_proxy"

                            
                            kubectl get pods
                            git checkout $branch_test
                            git branch 
                            pwd
                            
                            nomos status
                            nomos vet --source-format=unstructured
                            ls
                             

                            '''

                        }
                }

            }
            }

            stage('Wait for SRE Approval') {
         steps{
           timeout(time:12, unit:'HOURS') {
              input message:'Approve deployment?', submitter: 'sre-approvers'
           }
           script{
               withCredentials([usernamePassword(credentialsId: 'mayuresh-personal-git', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
    git checkout test
    git merge $branch_test
    sh ('git push https://${GIT_USERNAME}:${GIT_PASSWORD}@demo.git --tags')
}

           }
           
         }
     }
    }
}
